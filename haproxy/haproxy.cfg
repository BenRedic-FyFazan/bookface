global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 60s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE>
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

        # performance
        maxconn 4096    # Sets maximum number of connections to 4096
        busy-polling    # Prevents CPU from sleeping
        

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

# Haproxy cache, for caching av data i bruk av webserverne
cache bfcache
        total-max-size 3072
        max-object-size 1048576
        max-age 6000

# Maintenance
#frontend maintenance
#        bind *:80
#        use_backend mystats if { path -i /mystats }
#        default_backend bookface

# Frontend
frontend main
        bind *:80
        use_backend mystats if { path -i /mystats }
        default_backend bookface
        acl use_cache path -i -m sub image
        use_backend cachedcontent if use_cache
        
# Webservere p√• containere i docker
backend bookface
        option httpchk
        http-check send meth HEAD uri / ver HTTP/1.1 hdr Host 10.212.172.169
        #option httpchk HEAD / HTTP/1.1\r\nHost:\ 10.212.172.169
        balance roundrobin
        server www1container1 192.168.132.198:49001 check port 49001
        server www2container1 192.168.133.200:49001 check port 49001

# Cache backend
backend cachedcontent
        option httpchk
        http-check send meth HEAD uri / ver HTTP/1.1 hdr Host 10.212.172.169
        #option httpchk HEAD / HTTP/1.1\r\nHost:\ 10.212.172.169
        balance roundrobin
        http-request cache-use bfcache
        http-response cache-store bfcache
        server www1 192.168.132.198:49001 check port 49001
        server www2 192.168.133.200:49001 check port 49001

# Varnish backend
#backend varnish
#        balance roundrobin
#        option httpchk HEAD / HTTP/1.1\r\nHost:\ 10.212.172.169
#        server varnish1 192.168.132.201:80 check port 80
#        #server varnish2 192.168.132.81:80 check port 80

# Cockroach balansering
frontend cockroachdb
  bind *:26257
  mode tcp
  option tcplog
  default_backend cockroachdb_cluster

# Cockroach balansering BE
backend cockroachdb_cluster
  mode tcp
  balance roundrobin
  option tcp-check
  server node1 192.168.133.157:26257 check
  server node2 192.168.128.213:26257 check
  server node3 192.168.130.244:26257 check

# Maintenance backend
backend maintenance_backend
    http-response set-header Content-Type text/html
    http-response set-status 503
    http-response set-body <html><body><h1>Site is under maintenance</h1></body></html>


# Stats
backend mystats
        stats enable
        stats uri /mystats
        stats refresh 10s
        stats show-legends
        stats show-node

# Stat config fra skoleguide
listen stats
        bind *:1936
        stats enable
        stats uri /
        stats hide-version
        stats auth someuser:password


